[[plugins]]
repo = 'Shougo/dein.vim'

# LSP (Language Server Protocol)
[[plugins]]
repo = 'prabirshrestha/vim-lsp'

# LSP settings
[[plugins]]
hook_add = '''
command LSP LspManageServers
" Leader fmでフォーマット
nnoremap <Leader>fm <cmd>LspDocumentFormat<cr>
" 保存時自動フォーマット
autocmd BufWritePre <buffer> LspDocumentFormatSync
" 補完表示時のEnterで改行をしない
inoremap <expr><CR>  pumvisible() ? "<C-y>" : "<CR>"
set completeopt=menuone,noinsert
inoremap <expr><C-n> pumvisible() ? "<Down>" : "<C-n>"
inoremap <expr><C-p> pumvisible() ? "<Up>" : "<C-p>"
'''
repo = 'mattn/vim-lsp-settings'

# Auto completion for LSP
[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

# Auto completion for LSP
[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
# tree-sitter(syntax,indent)

[[plugins]]
hook_add = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
    disable = {
      'lua',
      'c_sharp'
    },
    ensure_installed = {
      "python",
      "go",
      "js",
      "ts",
      "json",
      "toml",
      "yml"
    },
    indent = {
      enable  = true
    },
    autotag = {
      enable = true
    }
  }
}
EOF
'''
repo = 'nvim-treesitter/nvim-treesitter'

[[plugins]] # カラースキーマ
hook_add = '''
  set termguicolors
  " the configuration options should be placed before `colorscheme sonokai`
  if has('termguicolors')
    set termguicolors
  endif

  " The configuration options should be placed before `colorscheme sonokai`.
  let g:sonokai_style = 'andromeda'
  let g:sonokai_enable_italic = 1
  let g:sonokai_disable_italic_comment = 1
  let g:sonokai_transparent_background = 1
  colorscheme sonokai
'''
repo = 'sainnhe/sonokai'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
depends = ['context_filetype.vim']
repo = 'osyo-manga/vim-precious'

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
# 先にpowerlinesフォントを入れておく必要がある
# あとターミナルの見た目は、NerdfontsをインストールしてSauce Code Pro Nerd Font Completeが良い感じ
# https://blog.htkyama.org/vim_airline

[[plugins]]
repo = 'ryanoasis/vim-devicons'
# nerd-fontをインストールして、terminalで設定する必要がある。
# ファイラーでアイコンを表示する設定

# telescope.nvimが依存
[[plugins]]
repo = 'nvim-lua/plenary.nvim'

# fzf-previewのようにプレビューを導入
# brew install luajit
# brew install rg
# brew install fd
[[plugins]]
hook_add = '''
" Find files using Telescope command-line sugar.
nnoremap <C-p> <cmd>Telescope find_files<cr>
nnoremap <C-g> <cmd>Telescope live_grep<cr>
nnoremap <leader>fb <cmd>Telescope buffers<cr>
nnoremap <leader>fh <cmd>Telescope help_tags<cr>

" Using Lua functions
nnoremap <leader>ff <cmd>lua require('telescope.builtin').find_files()<cr>
nnoremap <leader>fg <cmd>lua require('telescope.builtin').live_grep()<cr>
nnoremap <leader>fb <cmd>lua require('telescope.builtin').buffers()<cr>
nnoremap <leader>fh <cmd>lua require('telescope.builtin').help_tags()<cr>
lua <<EOF
require('telescope').setup{
  defaults = {
    mappings = {
      i = {
        ["<esc>"] = require('telescope.actions').close,
        ["<C-a>"] = require('telescope.actions').send_to_qflist + require('telescope.actions').open_qflist,
        ["<C-q>"] = require('telescope.actions').send_selected_to_qflist + require('telescope.actions').open_qflist
      }
    }
  }
}
EOF
'''
repo = 'nvim-telescope/telescope.nvim'

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
